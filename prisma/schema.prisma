// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Store {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  adminId     String
  name        String
  description String?
  customers   String?
  products    String?
  category    String?
  settings    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Settings {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  termsAndCondition String       @default("")
  paymentGateWays   String[]     @default(["Cash"])
  tax               Int          @default(0)
  storeImages       StoreImage[]
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model StoreImage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  setting   Settings @relation(fields: [settingId], references: [id])
  settingId String   @db.ObjectId
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Customer {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  contact   String
  email     String    @unique
  password  String
  storeId   String
  orders    String?
  Address   Address[]
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
}

model Address {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  addressLine1 String   @default("")
  addressLine2 String?
  contactno    String
  city         String
  state        String
  customer     Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId   String   @db.ObjectId
  pincode      String
  createdAt    DateTime @default(now())
  updateAt     DateTime @updatedAt
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String?
  variants Variant[]
}

model Variant {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  vname     String
  vdesc     String?
  price     Int
  stock     Int?
  weight    Int
  height    Int
  width     Int
  length    Int
  productId String @db.ObjectId
  product   Product @relation(fields: [productId],references: [id], onDelete: Cascade)
  images    VariantImage[]
  createdAt DateTime       @default(now())
  updateAt  DateTime       @updatedAt
}

model VariantImage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  variantId String   @db.ObjectId
  variant   Variant  @relation(fields: [variantId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}
